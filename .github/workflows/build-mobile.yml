name: Build Mobile Apps

on:
  push:
    branches: [main, develop]
    paths: ['apps/mobile/**', 'packages/**']
  pull_request:
    branches: [main, develop]
    paths: ['apps/mobile/**', 'packages/**']

jobs:
  test-mobile:
    name: Test Mobile App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint mobile code
        run: yarn workspace mobile lint

      - name: Run mobile tests
        run: yarn workspace mobile test

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: test-mobile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build shared packages
        run: |
          yarn workspace @cvr-bus-tracker/shared-types build
          yarn workspace @cvr-bus-tracker/config build

      - name: Create Android bundle
        run: |
          cd apps/mobile
          mkdir -p android/app/src/main/assets
          yarn bundle:android

      - name: Build Android APK
        run: |
          cd apps/mobile/android
          ./gradlew assembleRelease --no-daemon

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: apps/mobile/android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30

  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    needs: test-mobile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build shared packages
        run: |
          yarn workspace @cvr-bus-tracker/shared-types build
          yarn workspace @cvr-bus-tracker/config build

      - name: Install iOS pods
        run: |
          cd apps/mobile/ios
          pod install

      - name: Create iOS bundle
        run: |
          cd apps/mobile
          yarn bundle:ios

      - name: Build iOS app
        run: |
          cd apps/mobile
          npx react-native run-ios --configuration Release --simulator="iPhone 15 Pro"

      - name: Archive iOS app (if on main branch)
        if: github.ref == 'refs/heads/main'
        run: |
          cd apps/mobile/ios
          xcodebuild -workspace CVRBusTracker.xcworkspace -scheme CVRBusTracker -configuration Release -archivePath CVRBusTracker.xcarchive archive
          
      - name: Upload iOS archive
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: ios-archive
          path: apps/mobile/ios/CVRBusTracker.xcarchive
          retention-days: 30

  notify:
    name: Notify Build Status
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: always()

    steps:
      - name: Build Status Summary
        run: |
          echo "üì± Mobile Build Summary:"
          echo "Android Build: ${{ needs.build-android.result }}"
          echo "iOS Build: ${{ needs.build-ios.result }}"
          
          if [ "${{ needs.build-android.result }}" == "success" ] && [ "${{ needs.build-ios.result }}" == "success" ]; then
            echo "üéâ All mobile builds completed successfully!"
          elif [ "${{ needs.build-android.result }}" == "success" ]; then
            echo "‚úÖ Android build successful, iOS build had issues"
          elif [ "${{ needs.build-ios.result }}" == "success" ]; then
            echo "‚úÖ iOS build successful, Android build had issues"  
          else
            echo "‚ùå Both mobile builds failed"
          fi