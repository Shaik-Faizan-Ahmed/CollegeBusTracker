name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      mobile: ${{ steps.changes.outputs.mobile }}
      shared: ${{ steps.changes.outputs.shared }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            backend:
              - 'apps/backend/**'
              - 'packages/**'
            mobile:
              - 'apps/mobile/**'
              - 'packages/**'
            shared:
              - 'packages/**'
              - '.github/workflows/**'

  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.mobile == 'true' || needs.changes.outputs.shared == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build shared packages
        run: |
          yarn workspace @cvr-bus-tracker/shared-types build
          yarn workspace @cvr-bus-tracker/config build

      - name: Lint backend
        if: needs.changes.outputs.backend == 'true'
        run: yarn workspace backend lint

      - name: TypeScript check backend
        if: needs.changes.outputs.backend == 'true'
        run: yarn workspace backend build

      - name: Lint mobile
        if: needs.changes.outputs.mobile == 'true'
        run: yarn workspace mobile lint

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.shared == 'true'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build shared packages
        run: |
          yarn workspace @cvr-bus-tracker/shared-types build
          yarn workspace @cvr-bus-tracker/config build

      - name: Build backend
        run: yarn workspace backend build

      - name: Run backend tests
        run: yarn workspace backend test --coverage
        env:
          NODE_ENV: test
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: apps/backend/coverage/lcov.info
          flags: backend

  test-mobile:
    name: Test Mobile
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.mobile == 'true' || needs.changes.outputs.shared == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build shared packages
        run: |
          yarn workspace @cvr-bus-tracker/shared-types build
          yarn workspace @cvr-bus-tracker/config build

      - name: Run mobile tests
        run: yarn workspace mobile test --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: apps/mobile/coverage/lcov.info
          flags: mobile

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.mobile == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: yarn audit --level moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  status-check:
    name: Status Check
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test-backend, test-mobile, security-scan]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          echo "📋 CI Pipeline Status Summary:"
          echo "Lint and TypeCheck: ${{ needs.lint-and-typecheck.result }}"
          echo "Backend Tests: ${{ needs.test-backend.result }}"
          echo "Mobile Tests: ${{ needs.test-mobile.result }}"
          echo "Security Scan: ${{ needs.security-scan.result }}"
          
          # Set overall status
          if [ "${{ needs.lint-and-typecheck.result }}" == "success" ] && \
             [ "${{ needs.test-backend.result }}" == "success" ] && \
             [ "${{ needs.test-mobile.result }}" == "success" ]; then
            echo "✅ All CI checks passed!"
            echo "ci_status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ Some CI checks failed"
            echo "ci_status=failure" >> $GITHUB_OUTPUT
            exit 1
          fi